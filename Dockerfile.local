FROM node:22-bookworm

WORKDIR /app

COPY package*.json yarn.lock* ./

# Enable Yarn (included with Node.js)
RUN corepack enable yarn

# Install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl git zsh build-essential pkg-config \
    python3-pip python3-setuptools python3-venv && \
    rm -rf /var/lib/apt/lists/*

# Install Rust and watchexec for file watching
# RUN curl https://sh.rustup.rs -sSf | sh -s -- -y
# ENV PATH="/root/.cargo/bin:$PATH"
# RUN cargo install watchexec-cli

# Install zsh and oh-my-zsh
RUN sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" --unattended && \
    git clone https://github.com/zsh-users/zsh-autosuggestions /root/.oh-my-zsh/plugins/zsh-autosuggestions && \
    git clone https://github.com/zsh-users/zsh-syntax-highlighting /root/.oh-my-zsh/plugins/zsh-syntax-highlighting && \
    sed -i 's/^plugins=.*/plugins=(git zsh-autosuggestions zsh-syntax-highlighting)/' /root/.zshrc && \
    chsh -s /bin/zsh

# Install global Node.js development tools
RUN yarn global add typescript ts-node nodemon

# Copy the rest of the application
COPY . .

# Install dependencies
RUN yarn cache clean --force && yarn bootstrap

EXPOSE 3000 4200

# Use watchexec to watch for file changes and restart the app
# CMD ["watchexec", "-r", "--exts", ".sql,.prisma,.env,ts,js,json", "--ignore", "node_modules,dist,*.tmp,*.log", "--", "yarn", "start:dev"]
CMD ["yarn", "start:dev"]
