name: Server Build Prod

on:
  workflow_run:
    workflows: ['Release Prod']
    branches: [master]
    types:
      - completed

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  release-linux:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [buildjet-8vcpu-ubuntu-2204]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js, NPM and Yarn
        uses: buildjet/setup-node@v4
        with:
          node-version: 20.11.1
          cache: 'yarn'

      - name: Change permissions
        run: 'sudo chown -R $(whoami) ./*'

      - name: Install system dependencies
        run: 'sudo apt-get update && sudo apt install -y curl gnupg git libappindicator3-1 ca-certificates binutils icnsutils graphicsmagick'

      - name: Fix node-gyp and Python
        run: python3 -m pip install packaging setuptools

      - name: Install latest version of NPM
        run: 'sudo npm install -g npm@9'

      - name: Install node-gyp package
        run: 'sudo npm install --quiet -g node-gyp@9.3.1'

      - name: Install Yarn dependencies
        run: 'yarn install --network-timeout 1000000 --frozen-lockfile'

      - name: Bootstrap Yarn
        run: 'yarn bootstrap'

      - name: Bump server version
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('./.scripts/bump-version-electron.js')
            console.log(script.server(true))
        env:
          PROJECT_REPO: 'https://github.com/ever-co/ever-gauzy.git'
          DESKTOP_SERVER_APP_NAME: 'ever-gauzy-server'
          COMPANY_SITE_LINK: 'https://gauzy.co'
          DESKTOP_SERVER_APP_DESCRIPTION: 'Ever Gauzy Server'
          DESKTOP_SERVER_APP_ID: 'com.ever.gauzyserver'

      - name: Build Server
        run: 'yarn build:gauzy-server:linux:release:gh'
        env:
          USE_HARD_LINKS: false
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          EP_GH_IGNORE_TIME: true
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_TRACES_SAMPLE_RATE: '${{ secrets.SENTRY_TRACES_SAMPLE_RATE }}'
          SENTRY_PROFILE_SAMPLE_RATE: '${{ secrets.SENTRY_PROFILE_SAMPLE_RATE }}'
          SENTRY_HTTP_TRACING_ENABLED: '${{ secrets.SENTRY_HTTP_TRACING_ENABLED }}'
          SENTRY_POSTGRES_TRACKING_ENABLED: '${{ secrets.SENTRY_POSTGRES_TRACKING_ENABLED }}'
          SENTRY_PROFILING_ENABLED: '${{ secrets.SENTRY_PROFILING_ENABLED }}'
          DO_KEY_ID: ${{ secrets.DO_KEY_ID }}
          DO_SECRET_KEY: ${{ secrets.DO_SECRET_KEY }}
          NX_NO_CLOUD: true

  release-mac:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-12]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1
          cache: 'yarn'

      - name: Fix node-gyp and Python
        run: python3 -m pip install packaging setuptools

      - name: Install latest version of NPM
        run: 'sudo npm install -g npm@9'

      - name: Install node-gyp package
        run: 'sudo npm install --quiet -g node-gyp@9.3.1'

      - name: Install Yarn dependencies
        run: 'yarn install --network-timeout 1000000 --frozen-lockfile'

      - name: Bootstrap Yarn
        run: 'yarn bootstrap'

      - name: Bump Server version
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('./.scripts/bump-version-electron.js')
            console.log(script.server(true))
        env:
          PROJECT_REPO: 'https://github.com/ever-co/ever-gauzy.git'
          DESKTOP_SERVER_APP_NAME: 'ever-gauzy-server'
          COMPANY_SITE_LINK: 'https://gauzy.co'
          DESKTOP_SERVER_APP_DESCRIPTION: 'Ever Gauzy Server'
          DESKTOP_SERVER_APP_ID: 'com.ever.gauzyserver'

      - name: Build Server
        run: 'yarn build:gauzy-server:mac:release'
        env:
          USE_HARD_LINKS: false
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          EP_GH_IGNORE_TIME: true
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_TRACES_SAMPLE_RATE: '${{ secrets.SENTRY_TRACES_SAMPLE_RATE }}'
          SENTRY_PROFILE_SAMPLE_RATE: '${{ secrets.SENTRY_PROFILE_SAMPLE_RATE }}'
          SENTRY_HTTP_TRACING_ENABLED: '${{ secrets.SENTRY_HTTP_TRACING_ENABLED }}'
          SENTRY_POSTGRES_TRACKING_ENABLED: '${{ secrets.SENTRY_POSTGRES_TRACKING_ENABLED }}'
          SENTRY_PROFILING_ENABLED: '${{ secrets.SENTRY_PROFILING_ENABLED }}'
          DO_KEY_ID: ${{ secrets.DO_KEY_ID }}
          DO_SECRET_KEY: ${{ secrets.DO_SECRET_KEY }}
          NX_NO_CLOUD: true

  release-windows:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1
          cache: 'yarn'

      - name: Fix node-gyp and Python
        run: python3 -m pip install packaging setuptools

      - name: Install latest version of NPM
        run: 'npm install -g npm@9'

      - name: Install node-gyp package
        run: 'npm install --quiet -g node-gyp@9.3.1'

      - name: Install Yarn dependencies
        run: 'yarn install --network-timeout 1000000 --frozen-lockfile'

      - name: Bootstrap Yarn
        run: 'yarn bootstrap'

      - name: Bump Server version
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('./.scripts/bump-version-electron.js')
            console.log(script.server(true))
        env:
          PROJECT_REPO: 'https://github.com/ever-co/ever-gauzy.git'
          DESKTOP_SERVER_APP_NAME: 'ever-gauzy-server'
          COMPANY_SITE_LINK: 'https://gauzy.co'
          DESKTOP_SERVER_APP_DESCRIPTION: 'Ever Gauzy Server'
          DESKTOP_SERVER_APP_ID: 'com.ever.gauzyserver'

      - name: Build Server
        run: |
          # we need to clear some environment variables to avoid the error about limit of env vars size
          set ACTIONS_RUNNER_ACTION_ARCHIVE_CACHE=
          set ANT_HOME=
          set AZURE_CONFIG_DIR=
          set AZURE_DEVOPS_CACHE_DIR=
          set AZURE_EXTENSION_DIR=
          set AZ_DEVOPS_GLOBAL_CONFIG_DIR=
          set CABAL_DIR=
          set ChocolateyInstall=
          set ChromeWebDriver=
          set COBERTURA_HOME=
          # set COMPUTERNAME=
          # set COMSPEC=
          # set CONDA=
          # set DEPLOYMENT_BASEPATH=
          set SBT_HOME=
          set SELENIUM_JAR_PATH=
          set STATS_BLT=
          set STATS_D=
          set STATS_D_D=
          set STATS_EXT=
          set STATS_EXTP=
          set STATS_RDCL=
          set STATS_TIS=
          set STATS_TRP=
          set STATS_UE=
          set STATS_V3PS=
          set STATS_VMD=
          set STATS_VMFE=
          # set SYSTEMDRIVE=
          # set SYSTEMROOT=
          # set TEMP=
          # set TMP=
          set ANDROID_HOME=
          set ANDROID_NDK=
          set ANDROID_NDK_HOME=
          set ANDROID_NDK_LATEST_HOME=
          set ANDROID_NDK_ROOT=
          set ANDROID_SDK_ROOT=
          set GITHUB_ACTION=
          set GITHUB_ACTIONS=
          set GITHUB_ACTION_REF=
          # set GITHUB_ACTION_REPOSITORY=
          set GITHUB_ACTOR=
          # set GITHUB_ACTOR_ID=
          # set GITHUB_API_URL=
          # set GITHUB_BASE_REF=
          # set GITHUB_ENV=
          set GITHUB_EVENT_NAME=
          set GITHUB_EVENT_PATH=
          # set GITHUB_GRAPHQL_URL=
          # set GITHUB_HEAD_REF=
          # set GITHUB_JOB=
          set GITHUB_OUTPUT=
          set GITHUB_PATH=
          # set GITHUB_REF=
          # set GITHUB_REF_NAME=
          set GITHUB_REF_PROTECTED=
          # set GITHUB_REF_TYPE=
          # set GITHUB_REPOSITORY=
          # set GITHUB_REPOSITORY_ID=
          # set GITHUB_REPOSITORY_OWNER=
          # set GITHUB_REPOSITORY_OWNER_ID=
          set GITHUB_RETENTION_DAYS=
          set GITHUB_RUN_ATTEMPT=
          set GITHUB_RUN_ID=
          set GITHUB_RUN_NUMBER=
          # set GITHUB_SERVER_URL=
          set GITHUB_SHA=
          # set GITHUB_STATE=
          set GITHUB_STEP_SUMMARY=
          set GITHUB_TRIGGERING_ACTOR=
          set GITHUB_WORKFLOW=
          set GITHUB_WORKFLOW_REF=
          set GITHUB_WORKFLOW_SHA=
          # set GITHUB_WORKSPACE=
          set GOROOT_1_20_X64=
          set GOROOT_1_21_X64=
          set GOROOT_1_22_X64=
          set GRADLE_HOME=
          # set HOMEDRIVE=
          # set HOMEPATH=
          set IEWebDriver=
          set ImageOS=
          set ImageVersion=
          set JAVA_HOME=
          set JAVA_HOME_11_X64=
          set JAVA_HOME_17_X64=
          set JAVA_HOME_21_X64=
          set JAVA_HOME_8_X64=
          # set LOCALAPPDATA=
          # set LOGONSERVER=
          set M2=
          set M2_REPO=
          set MAVEN_OPTS=
          set MonAgentClientLocation=
          # set npm_config_prefix=
          # set NUMBER_OF_PROCESSORS=
          # set OS=
          # set PATHEXT=
          # set PERFLOG_LOCATION_SETTING=
          set PGBIN=
          set PGDATA=
          set PGPASSWORD=
          set PGROOT=
          set PGUSER=
          set PHPROOT=
          set PIPX_BIN_DIR=
          set PIPX_HOME=
          set POWERSHELL_DISTRIBUTION_CHANNEL=
          set POWERSHELL_UPDATECHECK=
          set PROCESSOR_ARCHITECTURE=
          set PROCESSOR_IDENTIFIER=
          set PROCESSOR_LEVEL=
          set PROCESSOR_REVISION=
          set PSModuleAnalysisCachePath=
          set PSModulePath=
          # set PUBLIC=
          set DOTNET_MULTILEVEL_LOOKUP=
          set DOTNET_NOLOGO=
          set DOTNET_SKIP_FIRST_TIME_EXPERIENCE=
          set DriverData=
          set EdgeWebDriver=
          set GCM_INTERACTIVE=
          set GeckoWebDriver=
          set GHCUP_INSTALL_BASE_PREFIX=
          set GHCUP_MSYS2=
          # set RTOOLS44_HOME=
          set RUNNER_ARCH=
          set RUNNER_ENVIRONMENT=
          set RUNNER_NAME=
          set RUNNER_OS=
          set RUNNER_PERFLOG=
          set RUNNER_TEMP=
          set RUNNER_TOOL_CACHE=
          set RUNNER_TRACKING_ID=
          set RUNNER_WORKSPACE=
          # set USERDOMAIN=
          # set USERDOMAIN_ROAMINGPROFILE=
          # set USERNAME=
          # set USERPROFILE=
          # set VCPKG_INSTALLATION_ROOT=
          # set WIX=
          # set TERM=
          # set HOME=
          # set WINDIR=
          # set ProgramData=
          # set PROGRAMFILES=
          # set ProgramFiles(x86)=
          # set ProgramW6432=
          # set ALLUSERSPROFILE=
          # set APPDATA=
          # set COMMONPROGRAMFILES=
          # set CommonProgramFiles(x86)=
          # set CommonProgramW6432=
          yarn build:gauzy-server:windows:release:gh
        env:
          USE_HARD_LINKS: false
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          EP_GH_IGNORE_TIME: true
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_TRACES_SAMPLE_RATE: '${{ secrets.SENTRY_TRACES_SAMPLE_RATE }}'
          SENTRY_PROFILE_SAMPLE_RATE: '${{ secrets.SENTRY_PROFILE_SAMPLE_RATE }}'
          SENTRY_HTTP_TRACING_ENABLED: '${{ secrets.SENTRY_HTTP_TRACING_ENABLED }}'
          SENTRY_POSTGRES_TRACKING_ENABLED: '${{ secrets.SENTRY_POSTGRES_TRACKING_ENABLED }}'
          SENTRY_PROFILING_ENABLED: '${{ secrets.SENTRY_PROFILING_ENABLED }}'
          DO_KEY_ID: ${{ secrets.DO_KEY_ID }}
          DO_SECRET_KEY: ${{ secrets.DO_SECRET_KEY }}
          NX_NO_CLOUD: true
          Path: 'C:\hostedtoolcache\windows\node\20.11.1\x64;C:\Program Files\Git\bin;C:\npm\prefix;C:\hostedtoolcache\windows\Python\3.9.13\x64\Scripts;C:\hostedtoolcache\windows\Python\3.9.13\x64;C:\Program Files\OpenSSL\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\PowerShell\7\;C:\Program Files\CMake\bin;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\Program Files\GitHub CLI\;C:\Program Files\Amazon\AWSCLIV2\;C:\Users\runneradmin\.dotnet\tools'
